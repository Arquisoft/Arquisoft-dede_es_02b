# This is a basic workflow to help you get started with Actions

name: CI for ASW2122

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

jobs:
  unit-test-webapp:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: webapp
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 16
    - run: npm ci
    - run: npm test
    - uses: codecov/codecov-action@v2
  unit-test-restapi:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: restapi
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 16
    - name: Create env file 📝
      run: |
        touch .env
        echo MONGO_URI_TEST=${{ secrets.MONGO_URI_TEST }} >> .env
        echo MONGO_URI=${{ secrets.MONGO_URI }} >> .env
        cat .env
    - run: npm ci
    - run: npm test
    - uses: codecov/codecov-action@v2
  e2e-tests:
    needs: [unit-test-webapp, unit-test-restapi]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 16
    - name: Create env file 📝
      run: |
        cd restapi
        touch .env
        echo MONGO_URI_TEST=${{ secrets.MONGO_URI_TEST }} >> .env
        echo MONGO_URI=${{ secrets.MONGO_URI }} >> .env
        cat .env
    - run: npm --prefix webapp install
    - run: npm --prefix restapi install
    - run: npm --prefix webapp run build
    - run: npm --prefix webapp run test:e2e
  # docker-push-webapp:
  #   name: Push webapp Docker Image to GitHub Packages
  #   runs-on: ubuntu-latest
  #   needs: [e2e-tests]
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Publish to Registry
  #     uses: elgohr/Publish-Docker-Github-Action@3.04
  #     with:
  #         name: arquisoft/dede_es2b/webapp
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.DOCKER_PUSH_TOKEN }}
  #         registry: ghcr.io
  #         workdir: webapp
  # docker-push-restapi:
  #   name: Push restapi Docker Image to GitHub Packages
  #   runs-on: ubuntu-latest
  #   needs: [e2e-tests]
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Publish to Registry
  #     uses: elgohr/Publish-Docker-Github-Action@3.04
  #     with:
  #         name: arquisoft/dede_es2b/restapi
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.DOCKER_PUSH_TOKEN }}
  #         registry: ghcr.io
  #         workdir: restapi
  deploy-webapp:
    needs: [e2e-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "dede2b-webapp" #Must be unique in Heroku
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          usedocker: true
          appdir: "webapp"
          docker_build_args: |
            API_URI
        env:
          API_URI: "https://dede2b-restapi.herokuapp.com/api"
  deploy-restapi:
    needs: [e2e-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "dede2b-restapi" #Must be unique in Heroku
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          usedocker: true
          appdir: "restapi"
          docker_build_args: |
            MONGO_URI
        env:
          MONGO_URI: ${{secrets.MONGO_URI}}

